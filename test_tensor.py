import tensorflow as tf
from NR.RFBN import RBFLayer, InitCentersRandom
import numpy as np
from tensorflow.keras.layers.experimental.preprocessing import Normalization
from NR.RFBN import  kmean_initializer

input_data = np.array([[-1.407547,1  -0.956147,   -0.7971373 ],
 [ 0.1664841  , 0.09258944 , 0.09931423],
 [ 0.48129034 , 0.31504866 , 0.294195  ],
 [ 0.48129034 , 0.34682858 , 0.33317116],
 [-1.250144   ,-0.8608073  ,-0.719185  ],
 [-0.6205315  ,-0.670128   ,-0.64123267],
 [-0.9353377  ,-0.8925872  ,-0.83611345],
 [-1.0927409  ,-0.956147   ,-0.8750896 ],
 [-0.4631284  ,-0.44766873 ,-0.40737578],
 [-0.6205315  ,-0.41588882 ,-0.32942346],
 [-1.4075471  ,-0.9243671  ,-0.7581611 ],
 [-1.4075471  ,-0.8925872  ,-0.719185  ],
 [-0.30572525 , 0.18792911 , 0.33317116],
 [-0.7779346  ,-0.7019079  ,-0.64123267],
 [-0.14832214 ,-0.28876927 ,-0.2904473 ],
 [-0.9353377  ,-0.8290274  ,-0.7581611 ],
 [-0.4631284  ,-0.47944862 ,-0.44635192],
 [ 0.48129034 , 0.09258944 , 0.02136192],
 [-0.14832214 ,-0.22520947 ,-0.212495  ],
 [-0.9353377  ,-0.8290274  ,-0.7581611 ],
 [-0.4631284  ,-0.47944862 ,-0.44635192],
 [-1.250144   ,-0.9243671  ,-0.7971373 ],
 [-1.250144   ,-1.0197067  ,-0.9140658 ],
 [-1.250144   ,-1.0197067  ,-0.9140658 ],
 [ 0.63869345 , 0.12436933 , 0.02136192],
 [-0.14832214 ,-0.1616497  ,-0.13454269],
 [-0.9353377  ,-0.8290274  ,-0.7581611 ],
 [-0.4631284  ,-0.47944862 ,-0.44635192],
 [-0.14832214 ,-0.35232905 ,-0.36839962],
 [-0.9353377  ,-0.8290274  ,-0.7581611 ],
 [-0.4631284  ,-0.47944862 ,-0.44635192],
 [ 0.1664841  ,-0.22520947 ,-0.2904473 ],
 [-0.14832214 ,-0.1616497  ,-0.13454269],
 [-0.9353377  ,-0.8290274  ,-0.7581611 ],
 [-0.4631284  ,-0.47944862 ,-0.44635192],
 [ 0.1664841  ,-0.22520947 ,-0.2904473 ],
 [-0.14832214 ,-0.25698936 ,-0.25147116],
 [-1.250144   ,-1.0197067  ,-0.9140658 ],
 [-1.0927409  ,-0.956147   ,-0.8750896 ],
 [ 1.1109028  , 0.5375079  , 0.41112345],
 [-0.14832214 ,-0.09808991 ,-0.05659039],
 [-0.9353377  ,-0.8290274  ,-0.7581611 ],
 [-0.4631284  ,-0.47944862 ,-0.44635192],
 [ 0.1664841  ,-0.22520947 ,-0.2904473 ],
 [ 0.48129034 ,-0.38410893 ,-0.5632804 ],
 [-0.9353377  ,-0.8608073  ,-0.7971373 ],
 [ 0.48129034 ,-0.41588882 ,-0.60225654],
 [-0.7779346  ,-0.76546764 ,-0.719185  ],
 [-1.5649502  ,-1.1150465  ,-0.9530419 ],
 [-1.5649502  ,-1.1150465  ,-0.9530419 ],
 [-1.5649502  ,-1.1150465  ,-0.9530419 ],
 [-1.0927409  ,-0.9879269  ,-0.9140658 ],
 [ 0.95349973 ,-0.1298698  ,-0.36839962],
 [-0.7779346  ,-0.7019079  ,-0.64123267],
 [ 0.00908098 ,-0.5430084  ,-0.64123267],
 [-0.14832214 ,-0.60656816 ,-0.68020886],
 [-0.4631284  ,-0.5747883  ,-0.5632804 ],
 [-0.4631284  ,-0.44766873 ,-0.40737578],
 [ 0.63869345 , 0.12436933 , 0.02136192],
 [ 1.1109028  , 0.5375079  , 0.41112345],
 [ 0.7960966  , 0.2514889  , 0.13829038],
 [ 0.95349973 , 0.02902965 ,-0.17351885],
 [ 1.268306   , 2.9845595  , 3.3733113 ],
 [ 0.7960966  , 0.72818726 , 0.7229327 ],
 [ 0.7960966  , 0.28326878 , 0.17726654],
 [ 1.1109028  , 1.4591248  , 1.5414319 ],
 [-0.14832214 , 0.37860847 , 0.5280519 ],
 [-0.9353377  , 1.7451438  , 2.3989072 ],
 [-0.14832214 , 0.12436933 , 0.21624269],
 [ 1.5831122  , 0.88708675 , 0.7229327 ],
 [ 2.5275311  , 1.7451438  , 1.5414319 ],
 [ 1.268306   , 1.5544645  , 1.6193842 ],
 [ 0.7960966  ,-0.22520947 ,-0.44635192],
 [ 1.268306   , 0.34682858 , 0.13829038],
 [ 0.7960966  ,-0.1298698  ,-0.32942346],
 [ 0.32388723 ,-0.32054916 ,-0.44635192],
 [ 0.7960966  , 0.75996715 , 0.7619088 ],
 [ 2.2127247  , 1.2048856  , 0.9567896 ],
 [ 1.4257091  , 2.4443014  , 2.6717405 ],
 [ 0.00908098 , 0.09258944 , 0.13829038],
 [-0.4631284  ,-0.32054916 ,-0.25147116],
 [ 2.6849341  , 4.4782143  , 4.854405  ],
 [ 0.63869345 , 1.8087035  , 2.0870981 ],
 [ 0.7960966  , 1.5544645  , 1.7363126 ],
 [ 1.7405154  , 2.285402   , 2.3989072 ],
 [ 2.370128   , 1.6180242  , 1.4245034 ],
 [ 1.7405154  , 1.7769237  , 1.7752888 ],
 [ 1.7405154  , 1.0459862  , 0.8788373 ],
 [ 0.63869345 , 0.02902965 ,-0.09556654],
 [-0.14832214 ,-0.19342959 ,-0.17351885],
 [-0.7779346  ,-0.5430084  ,-0.44635192],
 [-1.250144   ,-0.76546764 ,-0.60225654],
 [ 0.7960966  , 0.12436933 ,-0.01761423],
 [ 0.00908098 , 0.12436933 , 0.17726654],
 [-1.0927409  ,-0.76546764 ,-0.64123267],
 [-0.14832214 ,-0.38410893 ,-0.40737578],
 [-0.9353377  ,-0.7972475  ,-0.719185  ],
 [ 0.48129034 , 0.15614922 , 0.09931423],
 [-0.6205315  ,-0.76546764 ,-0.7581611 ],
 [-1.0927409  ,-0.9243671  ,-0.83611345],
 [ 1.268306   , 1.5226846  , 0.294195  ],
 [ 1.4257091  , 1.8722633  , 0.45009962],
 [-0.30572525 ,-0.03453013 , 0.06033807],
 [ 0.63869345 , 0.88708675 , 0.9567896 ]])
test_input = tf.constant(input_data, dtype=float)
init =  kmean_initializer(input_data)
rbflayer =  RBFLayer(2,initializer=init,  name='test')(test_input)
tf.print(rbflayer)

#x = np.array([[1,10],[2,15],[3,25]])
#normalizer = Normalization()
#normalizer.adapt(x)
#print(normalizer.mean.numpy(), '  ', normalizer.variance.numpy())
#normalized = normalizer(x).numpy()
#print(normalized)


